{'Q1a': 1.970416294395752, 'Q1b': 2.051966103395068, 'Q2': [2.666035950804163, 2.1542691579943236, 2.0280931357090237], 'Q3a': [[1, 4, 4], [1, 4, 4, 4]], 'Q3b': [1.572336370720419, 1.5611067461571124, 1.5237646097739816], 'Q4a': [[1, 4, 4, 4, 4, 5, 4.2, 4.2, 4.2, 4.2, 4.2], [1, 0, 4, 0, 4, 0, 4, 0, 4, 0, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]], 'Q4b': [1.5484453936907083, 1.5365288321572688], 'Q5a': [1, 121, 0, 4], 'Q5b': [2384, 168945, 86232, 3615, 0.470265288006232], 'Q6a': [1, 75, 0, 1, 0, 0, 0, 0, 0], 'Q6b': 0.17042177629134153, 'Q7': [0.13345081097468545, 0.1331097468546309, 0.14319766560557828, 0.14268606942549644, 0.14268606942549644, 0.1, 0.21333748810528996], 'Q8': 1.8164934412791371, 'Q9': [1.742012484444442, 2.052681872005889, 1.452063234864505], 'Q10': ("Build another dictionary called 'userAverages' which is similar to            'itemAverages' and records the averages of ratings per user,             who have appeared in trainDataSet. When finding the items has not             appeared in trainData, we turn to 'userAverages'. If the user has             appeared in trainData, then we use the average of this user's ratings             to predict the rating. If neither user nor the item has appeared in             the trainData, we can only return the global average of ratings.", 1.6696633366192306)}
